create table rooms(
room_id number GENERATED BY DEFAULT AS IDENTITY NOT NULL,
no_seats number NOT NULL,
imax number(1) NOT NULL
);

create table movies(
movie_id number GENERATED BY DEFAULT AS IDENTITY NOT NULL,
title varchar2(50) NOT NULL,
director_name varchar2(30) NULL,
director_last_name varchar2(30) NULL,
running_time number NULL
);


create table screenings(
screening_id number GENERATED BY DEFAULT AS IDENTITY NOT NULL,
room_id number NOT NULL,
movie_id number,
start_time date NOT NULL,
end_time date NOT NULL,
free_seats number NOT NULL
);

create table seats(
seat_number number NOT NULL,
room_id number NOT NULL);

create table tickets(
ticket_id number GENERATED BY DEFAULT AS IDENTITY,
screening_id number NOT NULL,
room_id number NOT NULL,
seat_number number NOT NULL,
price number(10,4) NOT NULL,
reduced number(1) NOT NULL,
paid number(1) NOT NULL,
valid_from date NOT NULL,
valid_to date NOT NULL
);

alter table rooms
add (constraint pk_rooms primary key (room_id),
constraint chk_imax check (imax in (0,1)));

alter table movies
add (constraint pk_movies primary key (movie_id),
constraint chk_running_time check (running_time > 0));

alter table seats
add (constraint pk_seats primary key(seat_number, room_id),
 constraint fk_seats_rooms foreign key(room_id) references rooms(room_id));

alter table screenings
add (constraint pk_screenings primary key (screening_id),
constraint fk_screenings_rooms foreign key(room_id) references rooms(room_id),
constraint fk_screenings_movies foreign key(movie_id) references movies(movie_id),
constraint chk_free_seats check(free_seats >= 0));

 
alter table tickets
add (constraint pk_tickets primary key(ticket_id),
constraint fk_tickets_screenings foreign key(screening_id) references screenings(screening_id),
constraint fk_tickets_rooms foreign key(room_id) references rooms(room_id),
constraint fk_tickets_seats foreign key(seat_number, room_id) references seats(seat_number, room_id),
constraint chk_reduced check (reduced in (0,1)),
constraint chk_paid check (paid in (0,1)),
constraint chk_valid_dates check(valid_from < valid_to));
